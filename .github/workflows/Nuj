const Discord = require("discord.js");
const fs = require("fs");
const bot = new Discord.Client({disableEveryone: true});
bot.commands = new Discord.Collection();
const token = "NjUxNDc1MzMwODc1NTIzMDk3.XfVU5g.f50TVGV_Tj_dCNufxvcwYtkNCOI";
let cooldown = new Set();
let cdSeconds = "10";
const prefix = "ro!"
const ytdl = require('ytdl-core');
const YouTube = require('simple-youtube-api');
const {YouTubeAPIKey} = require('./settings/credentials.json');

bot.commands = new Discord.Collection();
bot.aliases = new Discord.Collection();
bot.youtube = new YouTube(YouTubeAPIKey); // YouTube Client
bot.queue = new Map() // Music Queue
bot.votes = new Map(); // Vote Skip


bot.on("ready", async () => {
    console.log(`${bot.user.username} is online!!`)
    bot.user.setActivity("pe Ro-Community | ro!help ðŸŽ„", {type: "WATCHING"})
  });

  
bot.on('guildMemberAdd', member => {
    let embed = new Discord.RichEmbed()
	.setColor("RANDOM")
	.setTitle("** A intrat cineva **")
	.addField("**Bun venit!**", `${member.user.username}`)
	.setImage("https://pa1.narvii.com/6802/89ae9d8e8755e8e12dafc1c0552a9763d368acf7_hq.gif")
	.setThumbnail(member.user.avatarURL)
  .setTimestamp()
  .setFooter(`Â© ${bot.user.username}`, bot.user.avatarURL)
    member.guild.channels.get('655521149442326538').send(embed)
    member.guild.channels.get('655521197911572520').send(`Hey, ${member.user}! Bine ai venit pe comunitatea **Ro-Communityï¾‰â™¤**! DacÄƒ Ã®È›i vei pune tagul nostru (ï¾‰â™¤) vei primi un rol special È™i niste benefici! Have Fun ^^`); 
});

bot.on('guildMemberRemove', member => {
  let embed = new Discord.RichEmbed()
	.setColor("RANDOM")
	.setTitle("** A iesit cineva **")
	.addField("**Imi pare rau ca ne-ai parasit!**", `${member.user.username}`)
	.setThumbnail(member.user.avatarURL)
	.setImage("https://media1.giphy.com/media/26u4b45b8KlgAB7iM/giphy.gif")
  .setTimestamp()
  .setFooter(`Â© ${bot.user.username}`, bot.user.avatarURL)
    member.guild.channels.get('655521149442326538').send(embed); 
});

bot.on("message", async message => {
  
  if (!message.guild) return;
  if(message.author.bot) return undefined;
  if(message.channel.type === 'dm') return;
	let args = message.content.slice(prefix.length).trim().split(" ");
	let cmd = args.shift().toLowerCase();
  message.prefix = prefix;
  if(!message.content.startsWith(prefix)) return;
  
//Timeout commands
 if(cooldown.has(message.author.id)){
    message.delete();
    return message.channel.send(`**AÈ™teaptÄƒ ${cdSeconds} secunde pentru a mÄƒ folosi!**`);
  }
    
  if(!message.member.hasPermission("ADMINISTRATOR")){
  cooldown.add(message.author.id);
  }
  
  setTimeout(() => {
    cooldown.delete(message.author.id)
  }, cdSeconds * 1000);
// Command Handler
try{
let commandFile = require(`./cmds/general/${cmd}.js`);
commandFile.run(bot, message, args, prefix)
}catch(err){
}       
try{
  let commandFile = require(`./cmds/nsfw/${cmd}.js`);
  commandFile.run(bot, message, args, prefix)
  }catch(err){
  }   
  try{
    let commandFile = require(`./cmds/admin/${cmd}.js`);
    commandFile.run(bot, message, args, prefix)
    }catch(err){
    }   
    try{
      let commandFile = require(`./cmds/info/${cmd}.js`);
      commandFile.run(bot, message, args, prefix)
      }catch(err){
      }   

    try{
      let commandFile = require(`./cmds/fun/${cmd}.js`);
      commandFile.run(bot, message, args, prefix)
      }catch(err){
      }   
      try{
        let commandFile = require(`./cmds/music/${cmd}.js`);
        commandFile.run(bot, message, args, prefix)
        }catch(err){
        }   
        try{
          let commandFile = require(`./cmds/special/${cmd}.js`);
          commandFile.run(bot, message, args, prefix)
          }catch(err){
          } 



        bot.handleVideo = async (video, message, vc, playlist = false) => {
          let queue = bot.queue.get(message.guild.id);
          let music = {
              id: video.id,
              title: video.title,
              url: `https://www.youtube.com/watch?v=${video.id}`
          };
        
          if (!queue) {
              let queueConstruct = {
                  textChannel: message.channel,
                  voiceChannel: vc,
                  connection: null,
                  musics: [],
                  volume: 50,
                  playing: true
              };
              let voteConstruct = {
                  votes: 0,
                  voters: []
              };
        
              bot.queue.set(message.guild.id, queueConstruct);
              bot.votes.set(message.guild.id, voteConstruct)
              queueConstruct.musics.push(music);
        
              try {
                  var connection = await vc.join();
                  queueConstruct.connection = connection;
                  bot.play(message.guild, queueConstruct.musics[0]);
              } catch (err) {
                  bot.queue.delete(message.guild.id);
                  console.error(`Nu am putut sÄƒ mÄƒ alÄƒtur canalului tÄƒu deoarece: ${err}`);
              }
          } else {
              queue.musics.push(music);
              if (playlist) return;
              else return message.channel.send(`ðŸŽµ **${music.title}** a fost adÄƒugat ÃŽn queue`);
          }
          return;
        }
        
        bot.play = (guild, music) => {
          let queue = bot.queue.get(guild.id);
          let votes = bot.votes.get(guild.id)
          if (!music) {
              queue.voiceChannel.leave();
              bot.queue.delete(guild.id);
              bot.votes.delete(guild.id);
              return queue.textChannel.send(`ðŸŽµ Redarea muzicii s-a Ã®ncheiat`);
          }
        
          let dispatcher = queue.connection.playStream(ytdl(music.url))
              .on('end', () => {
                  queue.musics.shift();
                  votes.votes = 0;
                  votes.voters = [];
                  setTimeout(() => {
                      bot.play(guild, queue.musics[0]);
                  }, 250);
              })
              .on('error', err => console.error(err));
          dispatcher.setVolumeLogarithmic(queue.volume / 100);
        
          queue.textChannel.send(`ðŸŽµ **${music.title}** acum se ascultÄƒ`);
        }
});

bot.login(NjkzODY1NjU3NDE0MTg5MDY3.Xo4dWw.1XeWWWPGR-RalPdgTso9SvMAAsI);
